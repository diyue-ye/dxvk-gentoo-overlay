diff --git a/src/d3d11/d3d11_options.cpp b/src/d3d11/d3d11_options.cpp
index 98da2f5..a8cd113 100644
--- a/src/d3d11/d3d11_options.cpp
+++ b/src/d3d11/d3d11_options.cpp
@@ -10,6 +10,7 @@ namespace dxvk {
     this->fakeStreamOutSupport  = config.getOption<bool>("d3d11.fakeStreamOutSupport",  false);
     this->maxTessFactor         = config.getOption<int32_t>("d3d11.maxTessFactor",      0);
     this->samplerAnisotropy     = config.getOption<int32_t>("d3d11.samplerAnisotropy",  -1);
+    this->samplerMipLODBias     = config.getOption<int32_t>("d3d11.samplerMipLODBias",  -2);
   }
   
 }
\ No newline at end of file
diff --git a/src/d3d11/d3d11_options.h b/src/d3d11/d3d11_options.h
index d66e60e..2a3f605 100644
--- a/src/d3d11/d3d11_options.h
+++ b/src/d3d11/d3d11_options.h
@@ -43,6 +43,12 @@ namespace dxvk {
     /// Enforces anisotropic filtering with the
     /// given anisotropy value for all samplers.
     int32_t samplerAnisotropy;
+
+    /// Mip map LOD bias override
+    ///
+    /// Enforces LOD bias with the given value
+    /// for all samplers.
+    int32_t samplerMipLODBias;
   };
   
 }
\ No newline at end of file
diff --git a/src/d3d11/d3d11_sampler.cpp b/src/d3d11/d3d11_sampler.cpp
index 189cdb7..d615519 100644
--- a/src/d3d11/d3d11_sampler.cpp
+++ b/src/d3d11/d3d11_sampler.cpp
@@ -54,6 +54,13 @@ namespace dxvk {
       info.maxAnisotropy = float(samplerAnisotropyOption);
     }
     
+    // Enforce mip map lod bias
+    int32_t samplerMipLODBiasOption = device->GetOptions()->samplerMipLODBias;
+
+    if (samplerMipLODBiasOption >= -1) {
+      info.mipmapLodBias = float(samplerMipLODBiasOption);
+    }
+    
     m_sampler = device->GetDXVKDevice()->createSampler(info);
   }
   
